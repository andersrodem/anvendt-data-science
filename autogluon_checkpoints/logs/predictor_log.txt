Beginning AutoGluon training... Time limit = 9000s
AutoGluon will save models to 'autogluon_checkpoints'
=================== System Info ===================
AutoGluon Version:  1.1.1
Python Version:     3.11.9
Operating System:   Darwin
Platform Machine:   arm64
Platform Version:   Darwin Kernel Version 24.0.0: Mon Aug 12 20:51:54 PDT 2024; root:xnu-11215.1.10~2/RELEASE_ARM64_T6000
CPU Count:          10
GPU Count:          0
Memory Avail:       3.25 GB / 16.00 GB (20.3%)
Disk Space Avail:   182.29 GB / 926.35 GB (19.7%)
===================================================
Setting presets to: high_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': RMSE,
 'excluded_model_types': ['RecursiveTabular', 'DirectTabular'],
 'freq': 'D',
 'hyperparameters': 'default',
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 1,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 9000,
 'verbosity': 2}

Provided train_data has 766 rows, 1 time series. Median time series length is 766 (min=766, max=766). 

Provided data contains following columns:
	target: 'target'
	past_covariates:
		categorical:        []
		continuous (float): ['volume_demand', 'volume_production', 'price_lag_1d', 'price_lag_7d', 'price_lag_30d', 'month_sin', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'RMSE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2024-10-21 11:56:34
Excluded model types: ['RecursiveTabular', 'DirectTabular']
	Found 'RecursiveTabular' model in `hyperparameters`, but 'RecursiveTabular' is present in `excluded_model_types` and will be removed.
	Found 'DirectTabular' model in `hyperparameters`, but 'DirectTabular' is present in `excluded_model_types` and will be removed.
Models that will be trained: ['SeasonalNaive', 'CrostonSBA', 'NPTS', 'DynamicOptimizedTheta', 'AutoETS', 'AutoARIMA', 'Chronos[base]', 'TemporalFusionTransformer', 'DeepAR', 'PatchTST']
Training timeseries model SeasonalNaive. Training for up to 840.0s of the 9000.0s of remaining time.
	-6.1733       = Validation score (-RMSE)
	0.01    s     = Training runtime
	1.82    s     = Validation (prediction) runtime
Training timeseries model CrostonSBA. Training for up to 933.1s of the 8998.2s of remaining time.
	-13.8595      = Validation score (-RMSE)
	0.01    s     = Training runtime
	4.04    s     = Validation (prediction) runtime
Training timeseries model NPTS. Training for up to 1049.3s of the 8994.1s of remaining time.
	-23.7301      = Validation score (-RMSE)
	0.01    s     = Training runtime
	0.02    s     = Validation (prediction) runtime
Training timeseries model DynamicOptimizedTheta. Training for up to 1199.2s of the 8994.1s of remaining time.
	-8.3641       = Validation score (-RMSE)
	0.01    s     = Training runtime
	9.93    s     = Validation (prediction) runtime
Training timeseries model AutoETS. Training for up to 1397.4s of the 8984.1s of remaining time.
	-9.3954       = Validation score (-RMSE)
	0.01    s     = Training runtime
	10.55   s     = Validation (prediction) runtime
Training timeseries model AutoARIMA. Training for up to 1674.7s of the 8973.6s of remaining time.
	-11.2917      = Validation score (-RMSE)
	0.01    s     = Training runtime
	5.71    s     = Validation (prediction) runtime
Training timeseries model Chronos[base]. Training for up to 2092.0s of the 8967.8s of remaining time.
	Warning: Exception caused Chronos[base] to fail during training... Skipping this model.
	Chronos[base]/W0 requires a GPU to run, but no GPU was detected. Please make sure that you are using a computer with a CUDA-compatible GPU and `import torch; torch.cuda.is_available()` returns `True`.
Training timeseries model TemporalFusionTransformer. Training for up to 2789.3s of the 8967.8s of remaining time.
	-5.1546       = Validation score (-RMSE)
	101.26  s     = Training runtime
	0.02    s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 4133.3s of the 8866.5s of remaining time.
	-7.8799       = Validation score (-RMSE)
	19.74   s     = Training runtime
	0.01    s     = Validation (prediction) runtime
Training timeseries model PatchTST. Training for up to 8246.8s of the 8846.8s of remaining time.
	-11.0127      = Validation score (-RMSE)
	19.47   s     = Training runtime
	0.01    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'TemporalFusionTransformer': 1.0}
	-5.1546       = Validation score (-RMSE)
	0.27    s     = Training runtime
	0.02    s     = Validation (prediction) runtime
Training complete. Models trained: ['SeasonalNaive', 'CrostonSBA', 'NPTS', 'DynamicOptimizedTheta', 'AutoETS', 'AutoARIMA', 'TemporalFusionTransformer', 'DeepAR', 'PatchTST', 'WeightedEnsemble']
Total runtime: 172.97 s
Best model: TemporalFusionTransformer
Best model score: -5.1546
Model not specified in predict, will default to the model with the best validation score: TemporalFusionTransformer
